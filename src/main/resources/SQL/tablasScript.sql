-- Elimina datos en orden inverso a las dependencias
DELETE FROM RESPUESTA_ESTUDIANTE;
DELETE FROM PRESENTACION_EXAMEN;
DELETE FROM EXAMEN_PREGUNTA;
DELETE FROM EXAMEN;
DELETE FROM OPCION_RESPUESTA;
DELETE FROM PREGUNTA;
DELETE FROM MATRICULA;
DELETE FROM JORNADA;
DELETE FROM GRUPO;
DELETE FROM TEMA;
DELETE FROM CONTENIDO;
DELETE FROM UNIDAD;
DELETE FROM PLAN_ESTUDIO;
DELETE FROM USUARIO;
DELETE FROM AULA;
DELETE FROM PERIODO_ACADEMICO;
DELETE FROM CURSO;
DELETE FROM PROGRAMA;
DELETE FROM FACULTAD;
DELETE FROM CATEGORIA_EXAMEN;
DELETE FROM NIVEL_DIFICULTAD;
DELETE FROM TIPO_PREGUNTA;
DELETE FROM TIPO_USUARIO;
DELETE FROM ESTADO_GENERAL;
DELETE FROM AUDITORIA;
DELETE FROM NOTIFICACION;
DELETE FROM HISTORIAL_EXAMENES_CREADOS;
DELETE FROM HISTORIAL_PRESENTACIONES;
DELETE FROM ESTUDIANTES_EXAMEN_FINALIZADO;
DELETE FROM MODIFICACION_PREGUNTAS;
DELETE FROM PREGUNTAS_CON_BAJO_RENDIMIENTO;
DELETE FROM TEMP_USUARIOS_A_BLOQUEAR;

COMMIT;

-- Tablas básicas de configuración
CREATE TABLE TIPO_USUARIO (
    ID_TIPO_USUARIO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    DESCRIPCION VARCHAR2(200),
    ESTADO NUMBER(1) DEFAULT 1
);

CREATE TABLE TIPO_PREGUNTA (
    ID_TIPO_PREGUNTA NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    DESCRIPCION VARCHAR2(200),
    ESTADO NUMBER(1) DEFAULT 1
);

CREATE TABLE NIVEL_DIFICULTAD (
    ID_NIVEL_DIFICULTAD NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    DESCRIPCION VARCHAR2(200),
    ESTADO NUMBER(1) DEFAULT 1
);

CREATE TABLE ESTADO_GENERAL (
    ID_ESTADO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    DESCRIPCION VARCHAR2(200),
    TIPO_ENTIDAD VARCHAR2(50) NOT NULL,
    ESTADO NUMBER(1) DEFAULT 1
);

CREATE TABLE CATEGORIA_EXAMEN (
    ID_CATEGORIA NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    DESCRIPCION VARCHAR2(200),
    ESTADO NUMBER(1) DEFAULT 1
);

-- Tablas principales
CREATE TABLE FACULTAD (
    ID_FACULTAD NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    ID_ESTADO NUMBER
);

CREATE TABLE PROGRAMA (
    ID_PROGRAMA NUMBER PRIMARY KEY,
    ID_FACULTAD NUMBER,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    ID_ESTADO NUMBER
);

CREATE TABLE CURSO (
    ID_CURSO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    CREDITOS NUMBER(2),
    ID_ESTADO NUMBER,
    ID_PROGRAMA NUMBER
);

CREATE TABLE PERIODO_ACADEMICO (
    ID_PERIODO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    ID_ESTADO NUMBER
);

CREATE TABLE AULA (
    ID_AULA NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    BLOQUE VARCHAR2(50) NOT NULL,
    CAPACIDAD NUMBER(3),
    ID_ESTADO NUMBER
);

CREATE TABLE USUARIO (
    ID_USUARIO NUMBER PRIMARY KEY,
    ID_TIPO_USUARIO NUMBER NOT NULL,
    NOMBRE VARCHAR2(100) NOT NULL,
    APELLIDO VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    CONTRASENA VARCHAR2(100) NOT NULL,
    ID_ESTADO NUMBER NOT NULL,
    FECHA_REGISTRO DATE DEFAULT SYSDATE,
    FECHA_ULTIMO_ACCESO TIMESTAMP,
    INTENTOS_FALLIDOS NUMBER(2) DEFAULT 0,
    FECHA_BLOQUEO TIMESTAMP,
    TELEFONO VARCHAR2(20),
    DIRECCION VARCHAR2(200)
);

-- Tablas de planificación académica
CREATE TABLE PLAN_ESTUDIO (
    ID_PLAN NUMBER PRIMARY KEY,
    ID_CURSO NUMBER NOT NULL,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    FECHA_CREACION DATE DEFAULT SYSDATE,
    ID_ESTADO NUMBER
);

CREATE TABLE UNIDAD (
    ID_UNIDAD NUMBER PRIMARY KEY,
    ID_PLAN NUMBER NOT NULL,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    ORDEN NUMBER(2)
);

CREATE TABLE CONTENIDO (
    ID_CONTENIDO NUMBER PRIMARY KEY,
    ID_UNIDAD NUMBER NOT NULL,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    ORDEN NUMBER(2)
);

CREATE TABLE TEMA (
    ID_TEMA NUMBER PRIMARY KEY,
    ID_CURSO NUMBER NOT NULL,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    ORDEN NUMBER(2),
    ID_CONTENIDO NUMBER
);

-- Tablas de grupos y matrículas
CREATE TABLE GRUPO (
    ID_GRUPO NUMBER PRIMARY KEY,
    ID_CURSO NUMBER NOT NULL,
    ID_DOCENTE NUMBER NOT NULL,
    PERIODO VARCHAR2(20) NOT NULL,
    ANIO NUMBER(4) NOT NULL,
    CAPACIDAD NUMBER(3),
    ID_ESTADO NUMBER,
    ID_PERIODO NUMBER
);

CREATE TABLE JORNADA (
    ID_JORNADA NUMBER PRIMARY KEY,
    ID_GRUPO NUMBER NOT NULL,
    ID_AULA NUMBER NOT NULL,
    DIA_SEMANA VARCHAR2(20) NOT NULL,
    HORA_INICIO TIMESTAMP NOT NULL,
    HORA_FIN TIMESTAMP NOT NULL
);

CREATE TABLE MATRICULA (
    ID_MATRICULA NUMBER PRIMARY KEY,
    ID_ESTUDIANTE NUMBER NOT NULL,
    ID_GRUPO NUMBER NOT NULL,
    FECHA_MATRICULA DATE DEFAULT SYSDATE,
    ID_ESTADO NUMBER NOT NULL
);

-- Tablas relacionadas con exámenes
CREATE TABLE PREGUNTA (
    ID_PREGUNTA NUMBER PRIMARY KEY,
    ID_DOCENTE NUMBER NOT NULL,
    ID_TEMA NUMBER NOT NULL,
    ID_NIVEL_DIFICULTAD NUMBER NOT NULL,
    ID_TIPO_PREGUNTA NUMBER NOT NULL,
    TEXTO_PREGUNTA VARCHAR2(1000) NOT NULL,
    ES_PUBLICA NUMBER(1) DEFAULT 0,
    TIEMPO_MAXIMO NUMBER(4),
    PORCENTAJE NUMBER(5,2),
    ID_PREGUNTA_PADRE NUMBER,
    ID_ESTADO NUMBER NOT NULL
);

CREATE TABLE OPCION_RESPUESTA (
    ID_OPCION NUMBER PRIMARY KEY,
    ID_PREGUNTA NUMBER NOT NULL,
    TEXTO_OPCION VARCHAR2(500) NOT NULL,
    ES_CORRECTA NUMBER(1) DEFAULT 0,
    ORDEN NUMBER(2)
);

CREATE TABLE EXAMEN (
    ID_EXAMEN NUMBER PRIMARY KEY,
    ID_DOCENTE NUMBER NOT NULL,
    ID_TEMA NUMBER NOT NULL,
    NOMBRE VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(500),
    FECHA_CREACION DATE DEFAULT SYSDATE,
    FECHA_INICIO TIMESTAMP,
    FECHA_FIN TIMESTAMP,
    TIEMPO_LIMITE NUMBER(4),
    PESO_CURSO NUMBER(5,2),
    UMBRAL_APROBACION NUMBER(5,2),
    CANTIDAD_PREGUNTAS_TOTAL NUMBER(3),
    CANTIDAD_PREGUNTAS_PRESENTAR NUMBER(3),
    ID_ESTADO NUMBER NOT NULL,
    ID_CATEGORIA NUMBER,
    INTENTOS_PERMITIDOS NUMBER(2) DEFAULT 1,
    MOSTRAR_RESULTADOS NUMBER(1) DEFAULT 1,
    PERMITIR_RETROALIMENTACION NUMBER(1) DEFAULT 1,
    FECHA_ULTIMA_MODIFICACION TIMESTAMP,
    ID_USUARIO_ULTIMA_MODIFICACION NUMBER
);

CREATE TABLE EXAMEN_PREGUNTA (
    ID_EXAMEN_PREGUNTA NUMBER PRIMARY KEY,
    ID_EXAMEN NUMBER NOT NULL,
    ID_PREGUNTA NUMBER NOT NULL,
    PORCENTAJE NUMBER(5,2) NOT NULL,
    ORDEN NUMBER(3)
);

CREATE TABLE PRESENTACION_EXAMEN (
    ID_PRESENTACION NUMBER PRIMARY KEY,
    ID_EXAMEN NUMBER NOT NULL,
    ID_ESTUDIANTE NUMBER NOT NULL,
    FECHA_INICIO TIMESTAMP DEFAULT SYSTIMESTAMP,
    FECHA_FIN TIMESTAMP,
    PUNTAJE_OBTENIDO NUMBER(5,2),
    TIEMPO_UTILIZADO NUMBER(4),
    IP_ACCESO VARCHAR2(15),
    ID_ESTADO NUMBER NOT NULL
);

CREATE TABLE RESPUESTA_ESTUDIANTE (
    ID_RESPUESTA NUMBER PRIMARY KEY,
    ID_PRESENTACION NUMBER NOT NULL,
    ID_PREGUNTA NUMBER NOT NULL,
    RESPUESTA_DADA VARCHAR2(1000),
    ES_CORRECTA NUMBER(1),
    PUNTAJE_OBTENIDO NUMBER(5,2),
    TIEMPO_UTILIZADO NUMBER(4)
);

-- Tablas adicionales
CREATE TABLE AUDITORIA (
    ID_AUDITORIA NUMBER PRIMARY KEY,
    ID_USUARIO NUMBER,
    TABLA_AFECTADA VARCHAR2(50) NOT NULL,
    ID_REGISTRO NUMBER NOT NULL,
    TIPO_OPERACION VARCHAR2(20) NOT NULL,
    FECHA_OPERACION TIMESTAMP DEFAULT SYSTIMESTAMP,
    DATOS_ANTERIORES CLOB,
    DATOS_NUEVOS CLOB,
    IP_ACCESO VARCHAR2(15)
);

CREATE TABLE NOTIFICACION (
    ID_NOTIFICACION NUMBER PRIMARY KEY,
    ID_USUARIO NUMBER NOT NULL,
    TITULO VARCHAR2(100) NOT NULL,
    MENSAJE VARCHAR2(1000) NOT NULL,
    TIPO_NOTIFICACION VARCHAR2(50) NOT NULL,
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP,
    FECHA_LECTURA TIMESTAMP,
    ID_ESTADO NUMBER NOT NULL
);

COMMIT; 


-- Llaves foráneas para FACULTAD
ALTER TABLE FACULTAD ADD CONSTRAINT FK_FACULTAD_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para PROGRAMA
ALTER TABLE PROGRAMA ADD CONSTRAINT FK_PROGRAMA_FACULTAD 
FOREIGN KEY (ID_FACULTAD) REFERENCES FACULTAD(ID_FACULTAD);
ALTER TABLE PROGRAMA ADD CONSTRAINT FK_PROGRAMA_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para CURSO
ALTER TABLE CURSO ADD CONSTRAINT FK_CURSO_PROGRAMA 
FOREIGN KEY (ID_PROGRAMA) REFERENCES PROGRAMA(ID_PROGRAMA);
ALTER TABLE CURSO ADD CONSTRAINT FK_CURSO_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para PERIODO_ACADEMICO
ALTER TABLE PERIODO_ACADEMICO ADD CONSTRAINT FK_PERIODO_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para AULA
ALTER TABLE AULA ADD CONSTRAINT FK_AULA_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para USUARIO
ALTER TABLE USUARIO ADD CONSTRAINT FK_USUARIO_TIPO 
FOREIGN KEY (ID_TIPO_USUARIO) REFERENCES TIPO_USUARIO(ID_TIPO_USUARIO);
ALTER TABLE USUARIO ADD CONSTRAINT FK_USUARIO_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para PLAN_ESTUDIO
ALTER TABLE PLAN_ESTUDIO ADD CONSTRAINT FK_PLAN_CURSO 
FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID_CURSO);
ALTER TABLE PLAN_ESTUDIO ADD CONSTRAINT FK_PLAN_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para UNIDAD
ALTER TABLE UNIDAD ADD CONSTRAINT FK_UNIDAD_PLAN 
FOREIGN KEY (ID_PLAN) REFERENCES PLAN_ESTUDIO(ID_PLAN);

-- Llaves foráneas para CONTENIDO
ALTER TABLE CONTENIDO ADD CONSTRAINT FK_CONTENIDO_UNIDAD 
FOREIGN KEY (ID_UNIDAD) REFERENCES UNIDAD(ID_UNIDAD);

-- Llaves foráneas para TEMA
ALTER TABLE TEMA ADD CONSTRAINT FK_TEMA_CURSO 
FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID_CURSO);
ALTER TABLE TEMA ADD CONSTRAINT FK_TEMA_CONTENIDO 
FOREIGN KEY (ID_CONTENIDO) REFERENCES CONTENIDO(ID_CONTENIDO);

-- Llaves foráneas para GRUPO
ALTER TABLE GRUPO ADD CONSTRAINT FK_GRUPO_CURSO 
FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID_CURSO);
ALTER TABLE GRUPO ADD CONSTRAINT FK_GRUPO_DOCENTE 
FOREIGN KEY (ID_DOCENTE) REFERENCES USUARIO(ID_USUARIO);
ALTER TABLE GRUPO ADD CONSTRAINT FK_GRUPO_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);
ALTER TABLE GRUPO ADD CONSTRAINT FK_GRUPO_PERIODO 
FOREIGN KEY (ID_PERIODO) REFERENCES PERIODO_ACADEMICO(ID_PERIODO);

-- Llaves foráneas para JORNADA
ALTER TABLE JORNADA ADD CONSTRAINT FK_JORNADA_GRUPO 
FOREIGN KEY (ID_GRUPO) REFERENCES GRUPO(ID_GRUPO);
ALTER TABLE JORNADA ADD CONSTRAINT FK_JORNADA_AULA 
FOREIGN KEY (ID_AULA) REFERENCES AULA(ID_AULA);

-- Llaves foráneas para MATRICULA
ALTER TABLE MATRICULA ADD CONSTRAINT FK_MATRICULA_ESTUDIANTE 
FOREIGN KEY (ID_ESTUDIANTE) REFERENCES USUARIO(ID_USUARIO);
ALTER TABLE MATRICULA ADD CONSTRAINT FK_MATRICULA_GRUPO 
FOREIGN KEY (ID_GRUPO) REFERENCES GRUPO(ID_GRUPO);
ALTER TABLE MATRICULA ADD CONSTRAINT FK_MATRICULA_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para PREGUNTA
ALTER TABLE PREGUNTA ADD CONSTRAINT FK_PREGUNTA_DOCENTE 
FOREIGN KEY (ID_DOCENTE) REFERENCES USUARIO(ID_USUARIO);
ALTER TABLE PREGUNTA ADD CONSTRAINT FK_PREGUNTA_TEMA 
FOREIGN KEY (ID_TEMA) REFERENCES TEMA(ID_TEMA);
ALTER TABLE PREGUNTA ADD CONSTRAINT FK_PREGUNTA_NIVEL 
FOREIGN KEY (ID_NIVEL_DIFICULTAD) REFERENCES NIVEL_DIFICULTAD(ID_NIVEL_DIFICULTAD);
ALTER TABLE PREGUNTA ADD CONSTRAINT FK_PREGUNTA_TIPO 
FOREIGN KEY (ID_TIPO_PREGUNTA) REFERENCES TIPO_PREGUNTA(ID_TIPO_PREGUNTA);
ALTER TABLE PREGUNTA ADD CONSTRAINT FK_PREGUNTA_PADRE 
FOREIGN KEY (ID_PREGUNTA_PADRE) REFERENCES PREGUNTA(ID_PREGUNTA);
ALTER TABLE PREGUNTA ADD CONSTRAINT FK_PREGUNTA_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para OPCION_RESPUESTA
ALTER TABLE OPCION_RESPUESTA ADD CONSTRAINT FK_OPCION_PREGUNTA 
FOREIGN KEY (ID_PREGUNTA) REFERENCES PREGUNTA(ID_PREGUNTA);

-- Llaves foráneas para EXAMEN
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_DOCENTE 
FOREIGN KEY (ID_DOCENTE) REFERENCES USUARIO(ID_USUARIO);
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_TEMA 
FOREIGN KEY (ID_TEMA) REFERENCES TEMA(ID_TEMA);
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_CATEGORIA 
FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA_EXAMEN(ID_CATEGORIA);
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_USUARIO_MOD 
FOREIGN KEY (ID_USUARIO_ULTIMA_MODIFICACION) REFERENCES USUARIO(ID_USUARIO);

-- Llaves foráneas para EXAMEN_PREGUNTA
ALTER TABLE EXAMEN_PREGUNTA ADD CONSTRAINT FK_EXAMENP_EXAMEN 
FOREIGN KEY (ID_EXAMEN) REFERENCES EXAMEN(ID_EXAMEN);
ALTER TABLE EXAMEN_PREGUNTA ADD CONSTRAINT FK_EXAMENP_PREGUNTA 
FOREIGN KEY (ID_PREGUNTA) REFERENCES PREGUNTA(ID_PREGUNTA);

-- Llaves foráneas para PRESENTACION_EXAMEN
ALTER TABLE PRESENTACION_EXAMEN ADD CONSTRAINT FK_PRESENTACION_EXAMEN 
FOREIGN KEY (ID_EXAMEN) REFERENCES EXAMEN(ID_EXAMEN);
ALTER TABLE PRESENTACION_EXAMEN ADD CONSTRAINT FK_PRESENTACION_ESTUDIANTE 
FOREIGN KEY (ID_ESTUDIANTE) REFERENCES USUARIO(ID_USUARIO);
ALTER TABLE PRESENTACION_EXAMEN ADD CONSTRAINT FK_PRESENTACION_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);

-- Llaves foráneas para RESPUESTA_ESTUDIANTE
ALTER TABLE RESPUESTA_ESTUDIANTE ADD CONSTRAINT FK_RESPUESTA_PRESENTACION 
FOREIGN KEY (ID_PRESENTACION) REFERENCES PRESENTACION_EXAMEN(ID_PRESENTACION);
ALTER TABLE RESPUESTA_ESTUDIANTE ADD CONSTRAINT FK_RESPUESTA_PREGUNTA 
FOREIGN KEY (ID_PREGUNTA) REFERENCES PREGUNTA(ID_PREGUNTA);

-- Llaves foráneas para AUDITORIA
ALTER TABLE AUDITORIA ADD CONSTRAINT FK_AUDITORIA_USUARIO 
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO);

-- Llaves foráneas para NOTIFICACION
ALTER TABLE NOTIFICACION ADD CONSTRAINT FK_NOTIFICACION_USUARIO 
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO);
ALTER TABLE NOTIFICACION ADD CONSTRAINT FK_NOTIFICACION_ESTADO 
FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_GENERAL(ID_ESTADO);
